#!/bin/bash

# =============================================================================
# SCRIPT DE DEBUG PARA VARI√ÅVEIS DE AMBIENTE EM PRODU√á√ÉO
# =============================================================================

set -e

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}üîç DEBUG VARI√ÅVEIS DE AMBIENTE - PRODU√á√ÉO${NC}"
echo -e "${BLUE}==========================================${NC}"

# =============================================================================
# 1. VERIFICAR ARQUIVO .ENV DO FRONTEND
# =============================================================================
echo -e "${YELLOW}üìÅ Verificando arquivo .env do frontend...${NC}"

FRONTEND_ENV="/var/www/work-with-us-webdb/frontend-web/.env"

if [ -f "$FRONTEND_ENV" ]; then
    echo -e "${GREEN}‚úÖ Arquivo .env encontrado: $FRONTEND_ENV${NC}"
    echo -e "${BLUE}üìÑ Conte√∫do do arquivo .env:${NC}"
    cat "$FRONTEND_ENV"
    echo ""
    
    # Verificar VITE_API_URL especificamente
    if grep -q "VITE_API_URL" "$FRONTEND_ENV"; then
        VITE_API_URL=$(grep "VITE_API_URL" "$FRONTEND_ENV" | cut -d'=' -f2)
        echo -e "${GREEN}‚úÖ VITE_API_URL encontrada: $VITE_API_URL${NC}"
    else
        echo -e "${RED}‚ùå VITE_API_URL n√£o encontrada no .env${NC}"
    fi
else
    echo -e "${RED}‚ùå Arquivo .env n√£o encontrado: $FRONTEND_ENV${NC}"
fi

# =============================================================================
# 2. VERIFICAR BUILD DO FRONTEND
# =============================================================================
echo -e "${YELLOW}üì¶ Verificando build do frontend...${NC}"

FRONTEND_DIST="/var/www/work-with-us-webdb/frontend-web/dist"

if [ -d "$FRONTEND_DIST" ]; then
    echo -e "${GREEN}‚úÖ Pasta dist encontrada${NC}"
    echo -e "${BLUE}üìä Tamanho: $(du -sh $FRONTEND_DIST | cut -f1)${NC}"
    
    # Verificar se h√° arquivos JS
    JS_FILES=$(find "$FRONTEND_DIST" -name "*.js" | wc -l)
    echo -e "${BLUE}üìÑ Arquivos JS: $JS_FILES${NC}"
    
    # Procurar por localhost nos arquivos JS (para ver se a vari√°vel foi substitu√≠da)
    echo -e "${YELLOW}üîç Procurando por 'localhost' nos arquivos JS...${NC}"
    if grep -r "localhost" "$FRONTEND_DIST"/*.js 2>/dev/null | head -5; then
        echo -e "${RED}‚ö†Ô∏è  Encontrado 'localhost' nos arquivos JS - vari√°vel pode n√£o ter sido substitu√≠da${NC}"
    else
        echo -e "${GREEN}‚úÖ Nenhum 'localhost' encontrado nos arquivos JS${NC}"
    fi
else
    echo -e "${RED}‚ùå Pasta dist n√£o encontrada: $FRONTEND_DIST${NC}"
fi

# =============================================================================
# 3. VERIFICAR PROCESSO PM2
# =============================================================================
echo -e "${YELLOW}üöÄ Verificando processo PM2...${NC}"

if command -v pm2 >/dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ PM2 dispon√≠vel${NC}"
    pm2 status
    echo ""
    
    # Verificar logs do frontend
    echo -e "${YELLOW}üìã √öltimas 20 linhas dos logs do frontend:${NC}"
    pm2 logs frontend --lines 20 --nostream
else
    echo -e "${RED}‚ùå PM2 n√£o encontrado${NC}"
fi

# =============================================================================
# 4. TESTAR CONECTIVIDADE
# =============================================================================
echo -e "${YELLOW}üåê Testando conectividade...${NC}"

# Testar se o backend est√° respondendo
if curl -s -o /dev/null -w "%{http_code}" http://localhost:3001/api/health 2>/dev/null | grep -q "200"; then
    echo -e "${GREEN}‚úÖ Backend respondendo em localhost:3001${NC}"
else
    echo -e "${RED}‚ùå Backend n√£o est√° respondendo em localhost:3001${NC}"
fi

# Testar se o frontend est√° respondendo
if curl -s -o /dev/null -w "%{http_code}" http://localhost:3002 2>/dev/null | grep -q "200"; then
    echo -e "${GREEN}‚úÖ Frontend respondendo em localhost:3002${NC}"
else
    echo -e "${RED}‚ùå Frontend n√£o est√° respondendo em localhost:3002${NC}"
fi

# =============================================================================
# 5. VERIFICAR VARI√ÅVEIS DE AMBIENTE DO SISTEMA
# =============================================================================
echo -e "${YELLOW}üîß Vari√°veis de ambiente do sistema:${NC}"
echo -e "${BLUE}NODE_ENV: ${NODE_ENV:-'n√£o definida'}${NC}"
echo -e "${BLUE}PATH: ${PATH}${NC}"

echo -e "${GREEN}‚úÖ Debug conclu√≠do!${NC}"
