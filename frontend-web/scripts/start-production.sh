#!/bin/bash

# =============================================================================
# SCRIPT PARA INICIAR O FRONTEND EM PRODU√á√ÉO
# =============================================================================
# Este script prepara e inicia o frontend em produ√ß√£o
# =============================================================================

set -e

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}üöÄ INICIANDO FRONTEND EM PRODU√á√ÉO${NC}"
echo -e "${BLUE}==================================${NC}"

# Obter diret√≥rio do script
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
FRONTEND_DIR="$(dirname "$SCRIPT_DIR")"

cd "$FRONTEND_DIR"

echo -e "${YELLOW}üìÅ Diret√≥rio: $FRONTEND_DIR${NC}"

# =============================================================================
# 1. VERIFICAR VARI√ÅVEIS DE AMBIENTE
# =============================================================================
echo -e "${YELLOW}üîç Verificando arquivo .env...${NC}"

if [ ! -f ".env" ]; then
    echo -e "${RED}‚ùå Arquivo .env n√£o encontrado!${NC}"
    echo -e "${YELLOW}Por favor, configure o .env antes de continuar${NC}"
    exit 1
fi

echo -e "${GREEN}‚úÖ Arquivo .env encontrado${NC}"

# Carregar vari√°veis de ambiente
source .env

# Verificar vari√°veis obrigat√≥rias
if [ -z "$VITE_API_URL" ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  VITE_API_URL n√£o definida no .env${NC}"
    echo -e "${YELLOW}Usando valor padr√£o: http://localhost:3001${NC}"
fi

echo -e "${GREEN}‚úÖ Vari√°veis de ambiente configuradas${NC}"

# =============================================================================
# 2. INSTALAR DEPEND√äNCIAS
# =============================================================================
echo -e "${YELLOW}üì¶ Instalando depend√™ncias...${NC}"

if [ ! -d "node_modules" ]; then
    echo -e "${YELLOW}Instalando todas as depend√™ncias...${NC}"
    npm ci
else
    echo -e "${GREEN}‚úÖ Depend√™ncias j√° instaladas${NC}"
fi

# =============================================================================
# 3. VERIFICAR BUILD
# =============================================================================
echo -e "${YELLOW}üîç Verificando build...${NC}"

if [ ! -d "dist" ] || [ -z "$(ls -A dist 2>/dev/null)" ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  Build n√£o encontrado ou vazio${NC}"
    echo -e "${YELLOW}Execute './scripts/build-and-deploy.sh' primeiro${NC}"
    exit 1
fi

echo -e "${GREEN}‚úÖ Build encontrado${NC}"
echo -e "${BLUE}Tamanho do build: $(du -sh dist | cut -f1)${NC}"

# =============================================================================
# 4. INICIAR SERVIDOR DE PREVIEW
# =============================================================================
echo -e "${YELLOW}üöÄ Iniciando servidor de preview...${NC}"

# Obter porta do .env ou usar padr√£o
PORT=${VITE_PORT:-3000}

echo -e "${GREEN}‚úÖ Servidor iniciando na porta ${PORT}...${NC}"
echo -e "${BLUE}Preview URL: http://localhost:${PORT}${NC}"
echo -e "${YELLOW}Pressione Ctrl+C para parar${NC}"

# Iniciar preview
exec npm run preview
