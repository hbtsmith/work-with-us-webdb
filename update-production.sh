#!/bin/bash

# =============================================================================
# SCRIPT DE ATUALIZA√á√ÉO PARA PRODU√á√ÉO - WORK WITH US
# =============================================================================
# Este script atualiza o sistema em produ√ß√£o:
# - Atualiza c√≥digo do GitHub
# - Reinstala depend√™ncias
# - Reinicia servi√ßos
# - Verifica status
# =============================================================================

set -e

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Configura√ß√µes
DOMAIN="trabalhos.reservejoias.com.br"
BACKEND_PORT="3001"
FRONTEND_PORT="3002"
DEPLOY_DIR="/var/www/work-with-us-webdb"
BACKEND_DIR="$DEPLOY_DIR/backend"
FRONTEND_DIR="$DEPLOY_DIR/frontend-web"
SERVICE_USER="www-data"

echo -e "${BLUE}üîÑ ATUALIZANDO SISTEMA EM PRODU√á√ÉO${NC}"
echo -e "${BLUE}===================================${NC}"

# =============================================================================
# 1. BACKUP DA VERS√ÉO ATUAL
# =============================================================================
echo -e "${YELLOW}üíæ Fazendo backup da vers√£o atual...${NC}"

BACKUP_DIR="/var/backups/work-with-us-$(date +%Y%m%d-%H%M%S)"
mkdir -p "$BACKUP_DIR"

# Backup do c√≥digo atual
cp -r "$DEPLOY_DIR" "$BACKUP_DIR/"

echo -e "${GREEN}‚úÖ Backup criado em: $BACKUP_DIR${NC}"

# =============================================================================
# 2. ATUALIZAR C√ìDIGO
# =============================================================================
echo -e "${YELLOW}üì• Atualizando c√≥digo do GitHub...${NC}"

cd "$DEPLOY_DIR"

# Fazer backup das configura√ß√µes locais
cp "$BACKEND_DIR/.env" "$BACKUP_DIR/backend.env" 2>/dev/null || true
cp "$FRONTEND_DIR/.env" "$BACKUP_DIR/frontend.env" 2>/dev/null || true

# Atualizar c√≥digo
git fetch origin
git reset --hard origin/main

# Restaurar configura√ß√µes locais
cp "$BACKUP_DIR/backend.env" "$BACKEND_DIR/.env" 2>/dev/null || true
cp "$BACKUP_DIR/frontend.env" "$FRONTEND_DIR/.env" 2>/dev/null || true

echo -e "${GREEN}‚úÖ C√≥digo atualizado${NC}"

# =============================================================================
# 3. ATUALIZAR BACKEND
# =============================================================================
echo -e "${YELLOW}‚öôÔ∏è  Atualizando backend...${NC}"

cd "$BACKEND_DIR"

# Instalar/atualizar depend√™ncias
npm ci --production

# Gerar Prisma client
npx prisma generate

# Atualizar banco de dados
npx prisma db push

echo -e "${GREEN}‚úÖ Backend atualizado${NC}"

# =============================================================================
# 4. ATUALIZAR FRONTEND
# =============================================================================
echo -e "${YELLOW}‚öôÔ∏è  Atualizando frontend...${NC}"

cd "$FRONTEND_DIR"

# Instalar/atualizar depend√™ncias
npm ci

# Build do frontend
npm run build

echo -e "${GREEN}‚úÖ Frontend atualizado${NC}"

# =============================================================================
# 5. REINICIAR SERVI√áOS
# =============================================================================
echo -e "${YELLOW}üîÑ Reiniciando servi√ßos...${NC}"

# Reiniciar servi√ßos PM2
sudo -u $SERVICE_USER pm2 restart work-with-us-backend
sudo -u $SERVICE_USER pm2 restart work-with-us-frontend

# Salvar configura√ß√£o PM2
sudo -u $SERVICE_USER pm2 save

echo -e "${GREEN}‚úÖ Servi√ßos reiniciados${NC}"

# =============================================================================
# 6. VERIFICAR STATUS
# =============================================================================
echo -e "${YELLOW}üîç Verificando status...${NC}"

# Aguardar servi√ßos iniciarem
sleep 5

# Verificar PM2
sudo -u $SERVICE_USER pm2 status

# Testar endpoints
echo -e "${YELLOW}Testando endpoints...${NC}"

# Testar backend
if curl -s http://localhost:$BACKEND_PORT/api/jobs > /dev/null; then
    echo -e "${GREEN}‚úÖ Backend respondendo${NC}"
else
    echo -e "${RED}‚ùå Backend n√£o est√° respondendo${NC}"
fi

# Testar frontend
if curl -s http://localhost:$FRONTEND_PORT > /dev/null; then
    echo -e "${GREEN}‚úÖ Frontend respondendo${NC}"
else
    echo -e "${RED}‚ùå Frontend n√£o est√° respondendo${NC}"
fi

# =============================================================================
# 7. INFORMA√á√ïES FINAIS
# =============================================================================
echo -e "${BLUE}üéâ ATUALIZA√á√ÉO CONCLU√çDA!${NC}"
echo -e "${BLUE}========================${NC}"
echo -e "${GREEN}‚úÖ Sistema atualizado com sucesso${NC}"
echo -e "${GREEN}‚úÖ Site: https://$DOMAIN${NC}"
echo -e "${GREEN}‚úÖ Backup salvo em: $BACKUP_DIR${NC}"
echo ""
echo -e "${YELLOW}üìã Comandos √∫teis:${NC}"
echo -e "${BLUE}  PM2 Status:${NC} sudo -u $SERVICE_USER pm2 status"
echo -e "${BLUE}  PM2 Logs:${NC} sudo -u $SERVICE_USER pm2 logs"
echo -e "${BLUE}  Rollback:${NC} cp -r $BACKUP_DIR/* $DEPLOY_DIR/"
echo ""
echo -e "${GREEN}üöÄ Sistema atualizado e funcionando!${NC}"
