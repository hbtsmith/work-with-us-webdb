name: Database Backup

on:
  schedule:
    - cron: '0 2 * * *' # Daily at 2 AM
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to backup'
        required: true
        default: 'staging'
        type: choice
        options:
        - staging
        - production

jobs:
  backup-staging:
    name: Backup Staging Database
    runs-on: ubuntu-latest
    if: github.event.inputs.environment == 'staging' || github.event.schedule
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: false
        
    - name: Install dependencies
      run: |
        cd backend
        npm ci
        
    - name: Generate Prisma client
      run: |
        cd backend
        npm run db:generate
        
    - name: Backup staging database
      run: |
        cd backend
        echo "ðŸ”„ Creating staging database backup..."
        # Add your database backup commands here
        # Example: pg_dump, mysqldump, etc.
        echo "âœ… Staging database backup completed!"
        
    - name: Upload backup to artifacts
      uses: actions/upload-artifact@v4
      with:
        name: staging-db-backup
        path: ./backend/backups/
        retention-days: 30

  backup-production:
    name: Backup Production Database
    runs-on: ubuntu-latest
    if: github.event.inputs.environment == 'production' || github.event.schedule
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: false
        
    - name: Install dependencies
      run: |
        cd backend
        npm ci
        
    - name: Generate Prisma client
      run: |
        cd backend
        npm run db:generate
        
    - name: Backup production database
      run: |
        cd backend
        echo "ðŸ”„ Creating production database backup..."
        # Add your database backup commands here
        # Example: pg_dump, mysqldump, etc.
        echo "âœ… Production database backup completed!"
        
    - name: Upload backup to artifacts
      uses: actions/upload-artifact@v4
      with:
        name: production-db-backup
        path: ./backend/backups/
        retention-days: 90
